# Criado por: Francisco - gomes.tisystem@gmail.com
version: "3.5"

 # Definições do Servidor de Aplicação (SAw)
services:
  webapp:
    build:
      context: ./
      dockerfile: Dockerfile
      args: # Parâmetros necessários do [.env] sendo passado para a execução do Dockerfile.
        user: $USER
        uid: 1000
        PHP_IMG_VERSION: ${PHP_IMG_VERSION}
        XDEBUG_VERSION: ${XDEBUG_VERSION}
    image: php:7.4
    container_name: webapp
    restart: unless-stopped
    tty: true
    environment:
      XDEBUG_CONFIG: "idekey=${APP_IDE} client_host=${APP_CLIENT_IP} client_port=${APP_CLIENT_PORT}"
      PHP_IDE_CONFIG: "serverName=${APP_SERVER_NAME}"
    working_dir: /var/www
    volumes:
      - ./${APP_DIRECTORY_PATH}:/var/www
      - ./php/conf.d/php-dev.ini:/usr/local/etc/php/conf.d/php-dev.ini
      - ./php/conf.d/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      - ./php/conf.d/error_reporting.ini:/usr/local/etc/php/conf.d/error_reporting.ini
    networks:
      - app-network

  # Definições do Servidor de Banco de Dados (SBD)
  mysql:
    image: mysql:8.0
    container_name: mysql
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    restart: unless-stopped
    environment:
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_HOST: "%"
      #MYSQL_PASSWORD: secret
      #SERVICE_NAME: db
      #SERVICE_TAGS: dev
    ports:
      - ${DB_HOST}:${DB_PORT}
    expose:
      - 3307
    volumes:
      - ./mysql:/docker-entrypoint-initdb.d
    networks:
      app-network:
        aliases:
          - mysql_docker # Qualquer contêiner conectado à rede de teste pode acessar isso simplesmente usando "mysql_docker" como hostname

  # Definições do Servidor Web (SW)
  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    tty: true
    ports:
      - 80:80
    volumes:
      - ./${APP_DIRECTORY_PATH}:/var/www
      - ./nginx:/etc/nginx/conf.d/
    networks:
      - app-network

# Definições de Rede;
networks:
  app-network:
    name: app-network
    driver: bridge

# Corrigi problema de bridge -> docker system prune -a --volumes && docker network prune
